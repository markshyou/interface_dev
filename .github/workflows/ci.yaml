name: CI

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, order, store, user]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          # pytest 설치 추가
          pip install pytest

      - name: Test
        run: pytest

      - name: Build and tag Docker image
        run: |
          # 도커 이미지 빌드
          docker build -t interface_app/${{ matrix.service }}:${{ github.run_number }} .
          
          # 빌드한 이미지에 태그 추가
          docker tag interface_app/${{ matrix.service }}:${{ github.run_number }} interface_app/${{ matrix.service }}:latest

      - name: Push Docker image to ECR
        run: |
          # AWS CLI를 사용하여 ECR에 도커 이미지 푸시
          echo ${{ secrets.AWS_ACCESS_KEY_ID }} >> aws_creds
          echo ${{ secrets.AWS_SECRET_ACCESS_KEY }} >> aws_creds
          echo ${{ secrets.AWS_REGION }} >> aws_creds
          docker run --rm -v $PWD:/work -w /work --env-file aws_creds amazon/aws-cli ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/interface_app
