name: CI/CD 

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [frontend, order, store, user]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure Docker credential helper
        run: |
          echo '{"credHelpers": {"aws": "ecr-login"}}' > $HOME/.docker/config.json

      - name: Build Docker image
        run: |
          cd ${{ matrix.service }}
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-8)
          make build

      - name: Tag and push Docker image to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: 480936841767
        run: |
          cd ${{ matrix.service }}
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-8)
          docker tag ${{ matrix.service }}:latest 480936841767.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/interface-app:${{ matrix.service }}-${IMAGE_TAG}
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker push 480936841767.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/interface-app:${{ matrix.service }}-${IMAGE_TAG}

  deploy_to_k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout interface_k8s repository
        uses: actions/checkout@v2
        with:
          repository: markshyou/interface_k8s
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: interface_k8s

      - name: Update Kubernetes manifests and push changes
        run: |
          cd interface_k8s/overlays/dev
          for service in frontend order store user; do
            IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-8)
            kustomize edit set image 480936841767.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${service}-app=480936841767.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${service}-app:${service}-${IMAGE_TAG}
          done
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add .
          git commit -m "Update image tags"
          git push origin main
