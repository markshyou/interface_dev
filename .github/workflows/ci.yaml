name: Combined Workflows

on:
  push:
    branches:
      - main

jobs:
  ci_and_build:
    name: CI and Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, order, store, user]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure Docker credential helper
        run: |
          echo '{"credHelpers": {"aws": "ecr-login"}}' > $HOME/.docker/config.json

      - name: Determine changed directories and Build Docker image
        id: ci_build
        run: |
          cd ${{ matrix.service }}
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-8)

          # Determine changed directories
          git diff --name-only ${{ github.event.before }} origin/main > changed_files.txt
          grep -Eo '(frontend|user|order|store)' changed_files.txt > changed_apps.txt || echo "No changes"

          # Build Docker image if there are changes
          if [ -s changed_apps.txt ]; then
            make build
            docker tag ${{ matrix.service }}:latest 480936841767.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/interface-app:${{ matrix.service }}-${IMAGE_TAG}
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker push 480936841767.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/interface-app:${{ matrix.service }}-${IMAGE_TAG}
          fi

      - name: Handle "No changes"
        run: |
          if [ -s ${{ matrix.service }}/changed_apps.txt ]; then
            echo "Changes detected in ${{ matrix.service }} - continue the workflow"
          else
            echo "No changes in ${{ matrix.service }} - mark the job as succeeded"
            exit 0
          fi
